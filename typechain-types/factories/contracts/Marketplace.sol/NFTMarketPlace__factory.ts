/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NFTMarketPlace,
  NFTMarketPlaceInterface,
} from "../../../contracts/Marketplace.sol/NFTMarketPlace";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ListingItemCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "getItemPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getListingItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketPlace.ListingItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalItems",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalListingItems",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalUnsoldItems",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getUnsoldItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isSold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarketPlace.ListingItem[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listItem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listingItems",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isSold",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023bb380380620023bb833981810160405281019062000037919062000178565b620000576200004b6200006c60201b60201c565b6200007460201b60201c565b600180819055508060048190555050620001aa565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b62000152816200013d565b81146200015e57600080fd5b50565b600081519050620001728162000147565b92915050565b60006020828403121562000191576200019062000138565b5b6000620001a18482850162000161565b91505092915050565b61220180620001ba6000396000f3fe6080604052600436106100dd5760003560e01c80638da5cb5b1161007f578063cfc6213611610059578063cfc62136146102b9578063e20f807b146102f7578063e7fb74c714610322578063f2fde38b1461033e576100dd565b80638da5cb5b14610226578063be03120d14610251578063c78f19f91461028e576100dd565b80634c4df870116100bb5780634c4df870146101775780636bfb7a88146101b4578063715018a6146101df57806389bfd38f146101f6576100dd565b8063305a67a8146100e2578063310aac691461010b57806331e3a12e14610136575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611628565b610367565b005b34801561011757600080fd5b50610120610618565b60405161012d9190611664565b60405180910390f35b34801561014257600080fd5b5061015d60048036038101906101589190611628565b610629565b60405161016e9594939291906116fc565b60405180910390f35b34801561018357600080fd5b5061019e60048036038101906101999190611628565b6106ac565b6040516101ab9190611664565b60405180910390f35b3480156101c057600080fd5b506101c96106cc565b6040516101d69190611664565b60405180910390f35b3480156101eb57600080fd5b506101f46106dd565b005b610210600480360381019061020b919061177b565b6106f1565b60405161021d9190611664565b60405180910390f35b34801561023257600080fd5b5061023b610a1e565b60405161024891906117ce565b60405180910390f35b34801561025d57600080fd5b50610278600480360381019061027391906117e9565b610a47565b604051610285919061197c565b60405180910390f35b34801561029a57600080fd5b506102a3610c8f565b6040516102b09190611664565b60405180910390f35b3480156102c557600080fd5b506102e060048036038101906102db91906117e9565b610c95565b6040516102ee929190611a4d565b60405180910390f35b34801561030357600080fd5b5061030c610f79565b6040516103199190611664565b60405180910390f35b61033c60048036038101906103379190611628565b610f9e565b005b34801561034a57600080fd5b5061036560048036038101906103609190611a84565b611214565b005b6002600154036103ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a390611b0e565b60405180910390fd5b600260018190555060006005600083815260200190815260200160002090508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490611b7a565b60405180910390fd5b8060040160009054906101000a900460ff16156104af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a690611be6565b60405180910390fd5b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600001546040518463ffffffff1660e01b815260040161051493929190611c06565b600060405180830381600087803b15801561052e57600080fd5b505af1158015610542573d6000803e3d6000fd5b50505050600560008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600090556004820160006101000a81549060ff0219169055505061060d6040518060400160405280601f81526020017f4c697374696e6720776974682069642025732069732063616e63656c6c65640081525083611297565b506001808190555050565b60006106246002611333565b905090565b60056020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b600060056000838152602001908152602001600020600301549050919050565b60006106d86002611333565b905090565b6106e5611341565b6106ef60006113bf565b565b6000600260015403610738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072f90611b0e565b60405180910390fd5b600260018190555060008211610783576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077a90611c89565b60405180910390fd5b600034116107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd90611d1b565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161080393929190611c06565b600060405180830381600087803b15801561081d57600080fd5b505af1158015610831573d6000803e3d6000fd5b5050505060006108416002611333565b90506040518060a001604052808581526020018673ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200160001515815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055509050506109b06040518060400160405280601781526020017f4c697374696e67206974656d207769746820696420257300000000000000000081525082611297565b8473ffffffffffffffffffffffffffffffffffffffff1684827ffe4c99c112bfda597518df080ef7b925100c2be054783fd9cceb6ef44648d3a333876040516109fa929190611d3b565b60405180910390a4610a0c6002611483565b80915050600180819055509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000831015610a8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8490611db0565b60405180910390fd5b60008211610ad0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac790611e1c565b60405180910390fd5b60008267ffffffffffffffff811115610aec57610aeb611e3c565b5b604051908082528060200260200182016040528015610b2557816020015b610b12611586565b815260200190600190039081610b0a5790505b5090506000808590505b610b396002611333565b81108015610b4657508482105b15610c8357600560008281526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff161515151581525050838381518110610c5757610c56611e6b565b5b60200260200101819052508180610c6d90611ec9565b9250508080610c7b90611ec9565b915050610b2f565b50819250505092915050565b60045481565b6060806000841015610cdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd390611db0565b60405180910390fd5b60008311610d1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1690611e1c565b60405180910390fd5b60008367ffffffffffffffff811115610d3b57610d3a611e3c565b5b604051908082528060200260200182016040528015610d7457816020015b610d61611586565b815260200190600190039081610d595790505b50905060008467ffffffffffffffff811115610d9357610d92611e3c565b5b604051908082528060200260200182016040528015610dc15781602001602082028036833780820191505090505b5090506000808790505b610dd56002611333565b81108015610de257508682105b15610f68576005600082815260200190815260200160002060040160009054906101000a900460ff16610f5557600560008281526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff161515151581525050848381518110610f1b57610f1a611e6b565b5b602002602001018190525080838381518110610f3a57610f39611e6b565b5b6020026020010181815250508180610f5190611ec9565b9250505b8080610f6090611ec9565b915050610dcb565b508282945094505050509250929050565b6000610f856003611333565b610f8f6002611333565b610f999190611f11565b905090565b600260015403610fe3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fda90611b0e565b60405180910390fd5b60026001819055506000600560008381526020019081526020016000209050600015158160040160009054906101000a900460ff1615151461105a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105190611be6565b60405180910390fd5b348160030154146110a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109790611f91565b60405180910390fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561110a573d6000803e3d6000fd5b508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600001546040518463ffffffff1660e01b815260040161117093929190611c06565b600060405180830381600087803b15801561118a57600080fd5b505af115801561119e573d6000803e3d6000fd5b5050505060018160040160006101000a81548160ff0219169083151502179055506111c96003611483565b6112096040518060400160405280601a81526020017f4974656d207769746820696420257320736f6c6420746f2025730000000000008152508333611499565b506001808190555050565b61121c611341565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361128b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128290612023565b60405180910390fd5b611294816113bf565b50565b61132f82826040516024016112ad9291906120c2565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611538565b5050565b600081600001549050919050565b611349611552565b73ffffffffffffffffffffffffffffffffffffffff16611367610a1e565b73ffffffffffffffffffffffffffffffffffffffff16146113bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b49061213e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001816000016000828254019250508190555050565b6115338383836040516024016114b19392919061215e565b6040516020818303038152906040527f1c7ec448000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611538565b505050565b61154f8161154761155a61157b565b63ffffffff16565b50565b600033905090565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6115e3819050919050565b6040518060a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b6115eb61219c565b565b600080fd5b6000819050919050565b611605816115f2565b811461161057600080fd5b50565b600081359050611622816115fc565b92915050565b60006020828403121561163e5761163d6115ed565b5b600061164c84828501611613565b91505092915050565b61165e816115f2565b82525050565b60006020820190506116796000830184611655565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116aa8261167f565b9050919050565b6116ba8161169f565b82525050565b60006116cb8261167f565b9050919050565b6116db816116c0565b82525050565b60008115159050919050565b6116f6816116e1565b82525050565b600060a0820190506117116000830188611655565b61171e60208301876116b1565b61172b60408301866116d2565b6117386060830185611655565b61174560808301846116ed565b9695505050505050565b6117588161169f565b811461176357600080fd5b50565b6000813590506117758161174f565b92915050565b600080600060608486031215611794576117936115ed565b5b60006117a286828701611766565b93505060206117b386828701611613565b92505060406117c486828701611613565b9150509250925092565b60006020820190506117e360008301846116b1565b92915050565b60008060408385031215611800576117ff6115ed565b5b600061180e85828601611613565b925050602061181f85828601611613565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61185e816115f2565b82525050565b61186d8161169f565b82525050565b61187c816116c0565b82525050565b61188b816116e1565b82525050565b60a0820160008201516118a76000850182611855565b5060208201516118ba6020850182611864565b5060408201516118cd6040850182611873565b5060608201516118e06060850182611855565b5060808201516118f36080850182611882565b50505050565b60006119058383611891565b60a08301905092915050565b6000602082019050919050565b600061192982611829565b6119338185611834565b935061193e83611845565b8060005b8381101561196f57815161195688826118f9565b975061196183611911565b925050600181019050611942565b5085935050505092915050565b60006020820190508181036000830152611996818461191e565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006119d68383611855565b60208301905092915050565b6000602082019050919050565b60006119fa8261199e565b611a0481856119a9565b9350611a0f836119ba565b8060005b83811015611a40578151611a2788826119ca565b9750611a32836119e2565b925050600181019050611a13565b5085935050505092915050565b60006040820190508181036000830152611a67818561191e565b90508181036020830152611a7b81846119ef565b90509392505050565b600060208284031215611a9a57611a996115ed565b5b6000611aa884828501611766565b91505092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611af8601f83611ab1565b9150611b0382611ac2565b602082019050919050565b60006020820190508181036000830152611b2781611aeb565b9050919050565b7f4f6e6c792073656c6c65722063616e2063616e63656c206c697374696e670000600082015250565b6000611b64601e83611ab1565b9150611b6f82611b2e565b602082019050919050565b60006020820190508181036000830152611b9381611b57565b9050919050565b7f4974656d20697320616c726561647920736f6c64000000000000000000000000600082015250565b6000611bd0601483611ab1565b9150611bdb82611b9a565b602082019050919050565b60006020820190508181036000830152611bff81611bc3565b9050919050565b6000606082019050611c1b60008301866116b1565b611c2860208301856116b1565b611c356040830184611655565b949350505050565b7f5072696365206d7573742062652067726561746572207468616e203000000000600082015250565b6000611c73601c83611ab1565b9150611c7e82611c3d565b602082019050919050565b60006020820190508181036000830152611ca281611c66565b9050919050565b7f4c697374696e6720666565206d7573742062652067726561746572207468616e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b6000611d05602283611ab1565b9150611d1082611ca9565b604082019050919050565b60006020820190508181036000830152611d3481611cf8565b9050919050565b6000604082019050611d5060008301856116b1565b611d5d6020830184611655565b9392505050565b7f6f6666736574206d7573742062652067726561746572207468616e2030000000600082015250565b6000611d9a601d83611ab1565b9150611da582611d64565b602082019050919050565b60006020820190508181036000830152611dc981611d8d565b9050919050565b7f6c696d6974206d7573742062652067726561746572207468616e203000000000600082015250565b6000611e06601c83611ab1565b9150611e1182611dd0565b602082019050919050565b60006020820190508181036000830152611e3581611df9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ed4826115f2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f0657611f05611e9a565b5b600182019050919050565b6000611f1c826115f2565b9150611f27836115f2565b9250828203905081811115611f3f57611f3e611e9a565b5b92915050565b7f5072696365206973206e6f7420636f7272656374000000000000000000000000600082015250565b6000611f7b601483611ab1565b9150611f8682611f45565b602082019050919050565b60006020820190508181036000830152611faa81611f6e565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061200d602683611ab1565b915061201882611fb1565b604082019050919050565b6000602082019050818103600083015261203c81612000565b9050919050565b600081519050919050565b60005b8381101561206c578082015181840152602081019050612051565b60008484015250505050565b6000601f19601f8301169050919050565b600061209482612043565b61209e8185611ab1565b93506120ae81856020860161204e565b6120b781612078565b840191505092915050565b600060408201905081810360008301526120dc8185612089565b90506120eb6020830184611655565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612128602083611ab1565b9150612133826120f2565b602082019050919050565b600060208201905081810360008301526121578161211b565b9050919050565b600060608201905081810360008301526121788186612089565b90506121876020830185611655565b61219460408301846116b1565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220a4b98e4c4cabc44bf5ef0c60a2fc94b124d492737d80b8ddaf4a507b2af92b7d64736f6c63430008110033";

type NFTMarketPlaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketPlaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarketPlace__factory extends ContractFactory {
  constructor(...args: NFTMarketPlaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _listingPrice: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarketPlace> {
    return super.deploy(
      _listingPrice,
      overrides || {}
    ) as Promise<NFTMarketPlace>;
  }
  override getDeployTransaction(
    _listingPrice: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_listingPrice, overrides || {});
  }
  override attach(address: string): NFTMarketPlace {
    return super.attach(address) as NFTMarketPlace;
  }
  override connect(signer: Signer): NFTMarketPlace__factory {
    return super.connect(signer) as NFTMarketPlace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketPlaceInterface {
    return new utils.Interface(_abi) as NFTMarketPlaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarketPlace {
    return new Contract(address, _abi, signerOrProvider) as NFTMarketPlace;
  }
}
